{"version":3,"sources":["components/TimerSlot.js","App.js","index.js"],"names":["TimerSlot","index","timer","updateTimers","useState","time","setTime","text","setText","handleBlur","className","key","type","value","onChange","e","target","onBlur","App","timers","setTimers","pitch","setPitch","rate","setRate","voiceIndex","setVoiceIndex","useStopwatch","seconds","isRunning","start","reset","useSpeechSynthesis","speak","speaking","supported","voices","voice","styleFlexRow","display","flexDirection","styleContainerRatePitch","marginBottom","doReset","useCallback","newTimers","useEffect","foundTimer","find","length","htmlFor","id","name","event","map","option","voiceURI","lang","style","min","max","defaultValue","step","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2f46228.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\n\r\nconst TimerSlot = ({ index, timer, updateTimers }) => {\r\n\r\n  const [time, setTime] = useState(timer.time);\r\n  const [text, setText] = useState(timer.text);\r\n\r\n  const handleBlur = () => {\r\n    updateTimers(index, time, text);\r\n  }\r\n\r\n  return (\r\n    <form className=\"timer\" key={index}>\r\n      <input\r\n        type=\"number\"\r\n        value={time}\r\n        onChange={(e) => setTime(+e.target.value)}\r\n        onBlur={handleBlur}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        value={text}\r\n        onChange={(e) => setText(e.target.value)}\r\n        onBlur={handleBlur}\r\n      />\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default TimerSlot;\r\n","import React, {useCallback, useEffect, useState} from 'react';\nimport { useSpeechSynthesis } from 'react-speech-kit';\nimport TimerSlot from './components/TimerSlot';\nimport { useStopwatch } from 'react-timer-hook';\nimport './App.css';\n\n\nexport default function App() {\n\n  const [timers, setTimers] = useState([\n    {time: 2, text: 'this is my message'},\n    {time: 5, text: 'hello'},\n    {time: 8, text: 'whats up'}\n  ]);\n  const [pitch, setPitch] = useState(1);\n  const [rate, setRate] = useState(1);\n  const [voiceIndex, setVoiceIndex] = useState(null);\n\n  const { seconds, isRunning, start, reset } = useStopwatch({});\n  const { speak, speaking, supported, voices } = useSpeechSynthesis();\n\n  const voice = voices[voiceIndex] || null;\n\n  const styleFlexRow = { display: 'flex', flexDirection: 'row' };\n  const styleContainerRatePitch = {\n    display: 'flex',\n    flexDirection: 'column',\n    marginBottom: 12,\n  };\n\n  // eslint-disable-next-line\n  const doReset = useCallback(() => reset(0, false), []);\n  // const doSpeak = useCallback((...p) => speak(...p), []);\n\n  const updateTimers = (index, time, text) => {\n    const newTimers = [...timers];\n    newTimers[index].time = time;\n    newTimers[index].text = text;\n    setTimers(newTimers);\n  }\n\n  const addTimer = () => {\n    const newTimers = [...timers, {time: 12, text: 'new text'}];\n    setTimers(newTimers);\n  }\n\n  useEffect(() => {\n    const foundTimer = timers.find((timer) => timer.time === seconds);\n    if (foundTimer) {\n      // speak the text\n      speak({ text: foundTimer.text, voice, rate, pitch })\n    }\n\n    // check to see if seconds is greater than the last timers time\n    if (seconds > timers[timers.length - 1].time) doReset(); // eslint-disable-next-line\n  }, [seconds, timers, doReset, rate, pitch, voice])\n\n  if (!supported) {\n    return <div>Your browser is not supported. Sorry</div>\n  }\n\n  return (\n    <div className=\"app\">\n      <h2>Talk the Talk</h2>\n\n      <form>\n        <label htmlFor=\"voice\">Voice</label>\n        <select\n          id=\"voice\"\n          name=\"voice\"\n          value={voiceIndex || ''}\n          onChange={(event) => {\n            setVoiceIndex(event.target.value);\n          }}\n        >\n          <option value=\"\">Default</option>\n          {voices.map((option, index) => (\n            <option key={option.voiceURI} value={index}>\n              {`${option.lang} - ${option.name}`}\n            </option>\n          ))}\n        </select>\n        <div style={styleContainerRatePitch}>\n          <div style={styleFlexRow}>\n            <label htmlFor=\"rate\">Rate: </label>\n            <div className=\"rate-value\">{rate}</div>\n          </div>\n          <input\n            type=\"range\"\n            min=\"0.5\"\n            max=\"2\"\n            defaultValue=\"1\"\n            step=\"0.1\"\n            id=\"rate\"\n            onChange={(event) => {\n              setRate(event.target.value);\n            }}\n          />\n        </div>\n        <div style={styleContainerRatePitch}>\n          <div style={styleFlexRow}>\n            <label htmlFor=\"pitch\">Pitch: </label>\n            <div className=\"pitch-value\">{pitch}</div>\n          </div>\n          <input\n            type=\"range\"\n            min=\"0\"\n            max=\"2\"\n            defaultValue=\"1\"\n            step=\"0.1\"\n            id=\"pitch\"\n            onChange={(event) => {\n              setPitch(event.target.value);\n            }}\n          />\n        </div>\n      </form>\n\n      <div className=\"timers\">\n        {/* timers go here */}\n        {timers.map((timer, index) => (\n          <TimerSlot\n            key={index}\n            index={index}\n            timer={timer}\n            updateTimers={updateTimers}\n          />\n        ))}\n\n        <button className=\"add-button\" onClick={addTimer}>Add</button>\n      </div>\n\n      {/* seconds */}\n      <h2>{seconds}</h2>\n\n      {/* buttons */}\n      <div className=\"buttons\">\n        {!isRunning && (\n          <button\n            className=\"start-button\"\n            onClick={start}\n          >\n            Start\n          </button>\n        )}\n        {isRunning && (\n          <button\n            className=\"stop-button\"\n            onClick={doReset}\n          >\n            Stop\n          </button>\n        )}\n\n        {speaking && <p>I am speaking...</p>}\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}